/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetIpv6Pools200ResponseDataInner : An object representing an IPv6 pool.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetIpv6Pools200ResponseDataInner {
    /// The prefix length of the address. The total number of addresses that can be assigned from this range is calculated as 2<sup>(128 - prefix length)</sup>.
    #[serde(rename = "prefix", skip_serializing_if = "Option::is_none")]
    pub prefix: Option<i32>,
    /// __Read-only__ The IPv6 range of addresses in this pool.
    #[serde(rename = "range", skip_serializing_if = "Option::is_none")]
    pub range: Option<String>,
    /// __Filterable__, __Read-only__ The region for this pool of IPv6 addresses.
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    /// The last address in this block of IPv6 addresses.
    #[serde(rename = "route_target", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub route_target: Option<Option<String>>,
}

impl GetIpv6Pools200ResponseDataInner {
    /// An object representing an IPv6 pool.
    pub fn new() -> GetIpv6Pools200ResponseDataInner {
        GetIpv6Pools200ResponseDataInner {
            prefix: None,
            range: None,
            region: None,
            route_target: None,
        }
    }
}

