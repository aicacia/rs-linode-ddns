/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetTransfer200ResponseRegionTransfersInner {
    /// __Read-only__ The amount of your transfer pool that is billable this billing cycle for this Region.
    #[serde(rename = "billable", skip_serializing_if = "Option::is_none")]
    pub billable: Option<i32>,
    /// The Region ID for this network utilization data.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// __Read-only__ The amount of network usage allowed this billing cycle for this Region.
    #[serde(rename = "quota", skip_serializing_if = "Option::is_none")]
    pub quota: Option<i32>,
    /// __Read-only__ The amount of network usage you have used this billing cycle for this Region.
    #[serde(rename = "used", skip_serializing_if = "Option::is_none")]
    pub used: Option<i32>,
}

impl GetTransfer200ResponseRegionTransfersInner {
    pub fn new() -> GetTransfer200ResponseRegionTransfersInner {
        GetTransfer200ResponseRegionTransfersInner {
            billable: None,
            id: None,
            quota: None,
            used: None,
        }
    }
}

