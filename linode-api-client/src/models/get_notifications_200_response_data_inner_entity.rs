/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetNotifications200ResponseDataInnerEntity : __Read-only__ Detailed information about the notification.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetNotifications200ResponseDataInnerEntity {
    /// The unique ID of the notification's entity, based on the entity type. Returns `null` for an `account` or `promotion` entity.
    #[serde(rename = "id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub id: Option<Option<i32>>,
    /// The current label for this notification's entity.  Returns `null` for the following entity types:  - `entity_transfer` - `promotion` - `region`
    #[serde(rename = "label", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub label: Option<Option<String>>,
    /// The type of entity this is related to.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<TypeEnum>,
    /// The URL where you can access the notification's object. The URL is relative to the domain where you retrieved the notification. This value is `null` for the `promotion` entity type.
    #[serde(rename = "url", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub url: Option<Option<String>>,
}

impl GetNotifications200ResponseDataInnerEntity {
    /// __Read-only__ Detailed information about the notification.
    pub fn new() -> GetNotifications200ResponseDataInnerEntity {
        GetNotifications200ResponseDataInnerEntity {
            id: None,
            label: None,
            r#type: None,
            url: None,
        }
    }
}
/// The type of entity this is related to.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TypeEnum {
    #[serde(rename = "account")]
    Account,
    #[serde(rename = "entity_transfer")]
    EntityTransfer,
    #[serde(rename = "linode")]
    Linode,
    #[serde(rename = "loadbalancers")]
    Loadbalancers,
    #[serde(rename = "nodebalancer")]
    Nodebalancer,
    #[serde(rename = "promotion")]
    Promotion,
    #[serde(rename = "region")]
    Region,
    #[serde(rename = "ticket")]
    Ticket,
    #[serde(rename = "volume")]
    Volume,
}

impl Default for TypeEnum {
    fn default() -> TypeEnum {
        Self::Account
    }
}

