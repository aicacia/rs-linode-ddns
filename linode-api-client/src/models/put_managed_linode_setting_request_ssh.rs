/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PutManagedLinodeSettingRequestSsh : The SSH settings for this Linode.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PutManagedLinodeSettingRequestSsh {
    /// If `true`, Linode special forces may access this Linode over ssh to respond to Issues.
    #[serde(rename = "access", skip_serializing_if = "Option::is_none")]
    pub access: Option<bool>,
    /// The IP Linode special forces should use to access this Linode when responding to an Issue.  By default, any of a Linode's IP addresses can be used for incident response access.
    #[serde(rename = "ip", skip_serializing_if = "Option::is_none")]
    pub ip: Option<String>,
    /// The port Linode special forces should use to access this Linode over ssh to respond to an Issue.  The default `null` value corresponds to port 22.
    #[serde(rename = "port", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub port: Option<Option<i32>>,
    /// The specific user, if any, Linode's special forces should use when accessing this Linode to respond to an issue.  The default `null` value corresponds to the root user.
    #[serde(rename = "user", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub user: Option<Option<String>>,
}

impl PutManagedLinodeSettingRequestSsh {
    /// The SSH settings for this Linode.
    pub fn new() -> PutManagedLinodeSettingRequestSsh {
        PutManagedLinodeSettingRequestSsh {
            access: None,
            ip: None,
            port: None,
            user: None,
        }
    }
}

