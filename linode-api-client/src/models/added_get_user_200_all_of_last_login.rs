/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AddedGetUser200AllOfLastLogin : __Read-only__ Information for the most recent login attempt for this User.  `null` if no login attempts have been made since creation of this User.  Run the [List user logins](https://techdocs.akamai.com/linode-api/reference/get-account-logins) operation for additional login information.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AddedGetUser200AllOfLastLogin {
    /// __Read-only__ The date and time of this User's most recent login attempt.
    #[serde(rename = "login_datetime", skip_serializing_if = "Option::is_none")]
    pub login_datetime: Option<String>,
    /// __Read-only__ The result of the most recent login attempt for this User.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<StatusEnum>,
}

impl AddedGetUser200AllOfLastLogin {
    /// __Read-only__ Information for the most recent login attempt for this User.  `null` if no login attempts have been made since creation of this User.  Run the [List user logins](https://techdocs.akamai.com/linode-api/reference/get-account-logins) operation for additional login information.
    pub fn new() -> AddedGetUser200AllOfLastLogin {
        AddedGetUser200AllOfLastLogin {
            login_datetime: None,
            status: None,
        }
    }
}
/// __Read-only__ The result of the most recent login attempt for this User.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StatusEnum {
    #[serde(rename = "successful")]
    Successful,
    #[serde(rename = "failed")]
    Failed,
}

impl Default for StatusEnum {
    fn default() -> StatusEnum {
        Self::Successful
    }
}

