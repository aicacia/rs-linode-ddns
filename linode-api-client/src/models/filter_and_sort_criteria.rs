/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FilterAndSortCriteria {
    /// All conditions need to be true.
    #[serde(rename = "+and", skip_serializing_if = "Option::is_none")]
    pub plus_and: Option<Vec<serde_json::Value>>,
    /// The provided string needs to be in the value.
    #[serde(rename = "+contains", skip_serializing_if = "Option::is_none")]
    pub plus_contains: Option<String>,
    /// The value needs to be greater than the provided number.
    #[serde(rename = "+gt", skip_serializing_if = "Option::is_none")]
    pub plus_gt: Option<f64>,
    /// The value needs to be greater than or equal to the provided number.
    #[serde(rename = "+gte", skip_serializing_if = "Option::is_none")]
    pub plus_gte: Option<f64>,
    /// The value needs to be less than the provided number.
    #[serde(rename = "+lt", skip_serializing_if = "Option::is_none")]
    pub plus_lt: Option<f64>,
    /// The value needs to be less than or equal to the provided number.
    #[serde(rename = "+lte", skip_serializing_if = "Option::is_none")]
    pub plus_lte: Option<f64>,
    /// The provided string is left out of the results.
    #[serde(rename = "+neq", skip_serializing_if = "Option::is_none")]
    pub plus_neq: Option<String>,
    /// At least one condition needs to be true.
    #[serde(rename = "+or", skip_serializing_if = "Option::is_none")]
    pub plus_or: Option<Vec<serde_json::Value>>,
    /// Sort in ascending (`asc`) or descending (`desc`) order. This defaults to `asc`. Requires `+order_by`.
    #[serde(rename = "+order", skip_serializing_if = "Option::is_none")]
    pub plus_order: Option<PlusOrderEnum>,
    /// Order results based on the provided attribute. The attribute needs to be filterable.
    #[serde(rename = "+order_by", skip_serializing_if = "Option::is_none")]
    pub plus_order_by: Option<String>,
}

impl FilterAndSortCriteria {
    pub fn new() -> FilterAndSortCriteria {
        FilterAndSortCriteria {
            plus_and: None,
            plus_contains: None,
            plus_gt: None,
            plus_gte: None,
            plus_lt: None,
            plus_lte: None,
            plus_neq: None,
            plus_or: None,
            plus_order: None,
            plus_order_by: None,
        }
    }
}
/// Sort in ascending (`asc`) or descending (`desc`) order. This defaults to `asc`. Requires `+order_by`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PlusOrderEnum {
    #[serde(rename = "asc")]
    Asc,
    #[serde(rename = "desc")]
    Desc,
}

impl Default for PlusOrderEnum {
    fn default() -> PlusOrderEnum {
        Self::Asc
    }
}

