/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetLinodeStats200Response : __Read-only__ CPU, IO, IPv4, and IPv6 statistics. Graph data, if available, is in `[timestamp, reading]` array format. Timestamp is a UNIX timestamp in EST.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetLinodeStats200Response {
    /// Percentage of CPU used.
    #[serde(rename = "cpu", skip_serializing_if = "Option::is_none")]
    pub cpu: Option<Vec<Vec<f64>>>,
    #[serde(rename = "io", skip_serializing_if = "Option::is_none")]
    pub io: Option<models::GetLinodeStats200ResponseIo>,
    #[serde(rename = "netv4", skip_serializing_if = "Option::is_none")]
    pub netv4: Option<models::GetLinodeStats200ResponseNetv4>,
    #[serde(rename = "netv6", skip_serializing_if = "Option::is_none")]
    pub netv6: Option<models::GetLinodeStats200ResponseNetv6>,
    /// The title for this data set.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
}

impl GetLinodeStats200Response {
    /// __Read-only__ CPU, IO, IPv4, and IPv6 statistics. Graph data, if available, is in `[timestamp, reading]` array format. Timestamp is a UNIX timestamp in EST.
    pub fn new() -> GetLinodeStats200Response {
        GetLinodeStats200Response {
            cpu: None,
            io: None,
            netv4: None,
            netv6: None,
            title: None,
        }
    }
}

