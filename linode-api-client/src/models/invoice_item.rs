/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// InvoiceItem : An InvoiceItem object.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InvoiceItem {
    /// __Read-only__ The price, in US dollars, of the Invoice Item. Equal to the unit price multiplied by quantity.
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    /// __Read-only__ The date the Invoice Item started, based on month.
    #[serde(rename = "from", skip_serializing_if = "Option::is_none")]
    pub from: Option<String>,
    /// __Read-only__ The Invoice Item's display label.
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    /// __Read-only__ The quantity of this Item for the specified Invoice.
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<i32>,
    /// __Read-only__ The ID of the applicable Region associated with this Invoice Item.  `null` if there is no applicable Region.
    #[serde(rename = "region", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub region: Option<Option<String>>,
    /// __Read-only__ The amount of tax levied on this Item in US Dollars.
    #[serde(rename = "tax", skip_serializing_if = "Option::is_none")]
    pub tax: Option<f64>,
    /// __Read-only__ The date the Invoice Item ended, based on month.
    #[serde(rename = "to", skip_serializing_if = "Option::is_none")]
    pub to: Option<String>,
    /// __Read-only__ The price of this Item after taxes in US Dollars.
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<f64>,
    /// __Read-only__ The type of service, ether `hourly` or `misc`.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<TypeEnum>,
    /// __Read-only__ The monthly service fee in US Dollars for this Item.
    #[serde(rename = "unit_price", skip_serializing_if = "Option::is_none")]
    pub unit_price: Option<String>,
}

impl InvoiceItem {
    /// An InvoiceItem object.
    pub fn new() -> InvoiceItem {
        InvoiceItem {
            amount: None,
            from: None,
            label: None,
            quantity: None,
            region: None,
            tax: None,
            to: None,
            total: None,
            r#type: None,
            unit_price: None,
        }
    }
}
/// __Read-only__ The type of service, ether `hourly` or `misc`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TypeEnum {
    #[serde(rename = "hourly")]
    Hourly,
    #[serde(rename = "misc")]
    Misc,
}

impl Default for TypeEnum {
    fn default() -> TypeEnum {
        Self::Hourly
    }
}

