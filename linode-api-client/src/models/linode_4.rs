/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Linode4 {
    #[serde(rename = "alerts", skip_serializing_if = "Option::is_none")]
    pub alerts: Option<models::LinodeAlerts>,
    #[serde(rename = "backups", skip_serializing_if = "Option::is_none")]
    pub backups: Option<models::LinodeBackups>,
    /// __Limited availability__, __Read-only__ A list of capabilities this compute instance supports.
    #[serde(rename = "capabilities", skip_serializing_if = "Option::is_none")]
    pub capabilities: Option<Vec<String>>,
    /// __Read-only__ When this Linode was created.
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    /// __Limited availability__, __Read-only__ Indicates the local disk encryption setting for this Linode. If the Linode is part of an LKE cluster, the value is `null`.
    #[serde(rename = "disk_encryption", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub disk_encryption: Option<Option<String>>,
    /// __Deprecated__, __Filterable__ The group label for this Linode.
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<String>,
    /// __Read-only__ Whether this compute instance was provisioned with `user_data` provided via the Metadata service. See the [Create a Linode](https://techdocs.akamai.com/linode-api/reference/post-linode-instance) description for more information on Metadata.
    #[serde(rename = "has_user_data", skip_serializing_if = "Option::is_none")]
    pub has_user_data: Option<bool>,
    /// __Read-only__ The Linode's host machine, as a UUID.
    #[serde(rename = "host_uuid", skip_serializing_if = "Option::is_none")]
    pub host_uuid: Option<uuid::Uuid>,
    /// __Read-only__ The virtualization software powering this Linode.
    #[serde(rename = "hypervisor", skip_serializing_if = "Option::is_none")]
    pub hypervisor: Option<HypervisorEnum>,
    /// __Filterable__, __Read-only__ This Linode's ID which must be provided for all operations impacting this Linode.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// An Image ID to deploy the Linode Disk from.  Run the [List images](https://techdocs.akamai.com/linode-api/reference/get-images) operation with authentication to view all available Images. Official Linode Images start with `linode/`, while your Account's Images start with `private/`. Creating a disk from a Private Image requires `read_only` or `read_write` permissions for that Image. Run the [Update a user's grants](https://techdocs.akamai.com/linode-api/reference/put-user-grants) operation to adjust permissions for an Account Image.
    #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
    pub image: Option<String>,
    /// __Filterable__, __Read-only__ This Linode's IPv4 Addresses. Each Linode is assigned a single public IPv4 address upon creation, and may get a single private IPv4 address if needed. You may need to [Open a support ticket](https://techdocs.akamai.com/linode-api/reference/post-ticket) to get additional IPv4 addresses.  IPv4 addresses may be reassigned between your Linodes, or shared with other Linodes. See the [networking](https://techdocs.akamai.com/linode-api/reference/post-firewalls) operations for details.
    #[serde(rename = "ipv4", skip_serializing_if = "Option::is_none")]
    pub ipv4: Option<Vec<String>>,
    /// __Read-only__ This Linode's IPv6 SLAAC address. This address is specific to a Linode, and may not be shared. If the Linode has not been assigned an IPv6 address, the return value will be `null`.
    #[serde(rename = "ipv6", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ipv6: Option<Option<String>>,
    /// __Filterable__ Provides a name for the Linode. If not provided, the API generates one for it.  Linode labels have the following constraints:  - It needs to begin and end with an alphanumeric character. - It can only consist of alphanumeric characters, hyphens (`-`), underscores (`_`) or periods (`.`). - Cannot have two hyphens (`--`), underscores (`__`) or periods (`..`) in a row.
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    /// __Read-only__ The ID of the Kubernetes cluster if the Linode is part of cluster.
    #[serde(rename = "lke_cluster_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub lke_cluster_id: Option<Option<i32>>,
    #[serde(rename = "placement_group", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub placement_group: Option<Option<models::Linode1PlacementGroup>>,
    /// __Filterable__, __Read-only__ The [region](https://techdocs.akamai.com/linode-api/reference/get-regions) where the Linode deployed. A Linode's region can only be changed by initiating a [cross data center migration](https://techdocs.akamai.com/linode-api/reference/post-migrate-linode-instance).
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    #[serde(rename = "specs", skip_serializing_if = "Option::is_none")]
    pub specs: Option<models::LinodeSpecs>,
    /// __Read-only__ A brief description of this Linode's current state. This field may change without direct action from you. For example, when a compute instance goes into maintenance mode, its status is `stopped`. Status is generally self-explanatory, based on its name.  - `busy` indicates you've assigned the compute instance to a [placement group](https://techdocs.akamai.com/cloud-computing/docs/work-with-placement-groups), but the compute instance is currently booting. Once the boot completes, the API completes the assignment and updates the compute instance's `status` accordingly. - `provisioning` indicates that the API is applying operating system or Marketplace applications on the compute instance. - `billing_suspension` indicates that payment is past due on the compute instance, so we've suspended its use.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<StatusEnum>,
    /// __Filterable__ Tags to help you organize your content.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    /// __Read-only__ This is the [Linode type](https://techdocs.akamai.com/linode-api/reference/get-linode-types) that this Linode was deployed with. To change a Linode's type, use [Resize a Linode](https://techdocs.akamai.com/linode-api/reference/post-resize-linode-instance).
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// __Read-only__ When this Linode was last updated.
    #[serde(rename = "updated", skip_serializing_if = "Option::is_none")]
    pub updated: Option<String>,
    /// The watchdog, named Lassie, is a Shutdown Watchdog that monitors your Linode and reboots it if it powers off unexpectedly. It works by issuing a boot job when your Linode powers off without a shutdown job being responsible. To prevent a loop, Lassie gives up if there have been more than 5 boot jobs issued within 15 minutes.
    #[serde(rename = "watchdog_enabled", skip_serializing_if = "Option::is_none")]
    pub watchdog_enabled: Option<bool>,
}

impl Linode4 {
    pub fn new() -> Linode4 {
        Linode4 {
            alerts: None,
            backups: None,
            capabilities: None,
            created: None,
            disk_encryption: None,
            group: None,
            has_user_data: None,
            host_uuid: None,
            hypervisor: None,
            id: None,
            image: None,
            ipv4: None,
            ipv6: None,
            label: None,
            lke_cluster_id: None,
            placement_group: None,
            region: None,
            specs: None,
            status: None,
            tags: None,
            r#type: None,
            updated: None,
            watchdog_enabled: None,
        }
    }
}
/// __Read-only__ The virtualization software powering this Linode.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum HypervisorEnum {
    #[serde(rename = "kvm")]
    Kvm,
}

impl Default for HypervisorEnum {
    fn default() -> HypervisorEnum {
        Self::Kvm
    }
}
/// __Read-only__ A brief description of this Linode's current state. This field may change without direct action from you. For example, when a compute instance goes into maintenance mode, its status is `stopped`. Status is generally self-explanatory, based on its name.  - `busy` indicates you've assigned the compute instance to a [placement group](https://techdocs.akamai.com/cloud-computing/docs/work-with-placement-groups), but the compute instance is currently booting. Once the boot completes, the API completes the assignment and updates the compute instance's `status` accordingly. - `provisioning` indicates that the API is applying operating system or Marketplace applications on the compute instance. - `billing_suspension` indicates that payment is past due on the compute instance, so we've suspended its use.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StatusEnum {
    #[serde(rename = "running")]
    Running,
    #[serde(rename = "offline")]
    Offline,
    #[serde(rename = "booting")]
    Booting,
    #[serde(rename = "busy")]
    Busy,
    #[serde(rename = "rebooting")]
    Rebooting,
    #[serde(rename = "shutting_down")]
    ShuttingDown,
    #[serde(rename = "provisioning")]
    Provisioning,
    #[serde(rename = "deleting")]
    Deleting,
    #[serde(rename = "migrating")]
    Migrating,
    #[serde(rename = "rebuilding")]
    Rebuilding,
    #[serde(rename = "cloning")]
    Cloning,
    #[serde(rename = "restoring")]
    Restoring,
    #[serde(rename = "stopped")]
    Stopped,
    #[serde(rename = "billing_suspension")]
    BillingSuspension,
}

impl Default for StatusEnum {
    fn default() -> StatusEnum {
        Self::Running
    }
}

