/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetRegions200ResponseDataInner : An area where Linode services are available.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetRegions200ResponseDataInner {
    /// __Read-only__ A list of capabilities of this region.
    #[serde(rename = "capabilities", skip_serializing_if = "Option::is_none")]
    pub capabilities: Option<Vec<String>>,
    /// __Filterable__, __Read-only__ The country where this Region resides.
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    /// __Read-only__ The unique ID of this Region.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// __Read-only__ Detailed location information for this Region, including city, state or region, and country.
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    #[serde(rename = "placement_group_limits", skip_serializing_if = "Option::is_none")]
    pub placement_group_limits: Option<models::GetRegions200ResponseDataInnerPlacementGroupLimits>,
    #[serde(rename = "resolvers", skip_serializing_if = "Option::is_none")]
    pub resolvers: Option<models::GetRegions200ResponseDataInnerResolvers>,
    /// __Filterable__, __Read-only__ This region's site type. A `core` region indicates a traditional cloud computing [region](https://www.linode.com/docs/products/platform/get-started/guides/choose-a-data-center/#product-availability) that offers all compute services. A `distributed` region indicates sites that are globally dispersed to be closer to end users and workloads. These regions offer limited services.
    #[serde(rename = "site_type", skip_serializing_if = "Option::is_none")]
    pub site_type: Option<SiteTypeEnum>,
    /// __Read-only__ This region's current operational status.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<StatusEnum>,
}

impl GetRegions200ResponseDataInner {
    /// An area where Linode services are available.
    pub fn new() -> GetRegions200ResponseDataInner {
        GetRegions200ResponseDataInner {
            capabilities: None,
            country: None,
            id: None,
            label: None,
            placement_group_limits: None,
            resolvers: None,
            site_type: None,
            status: None,
        }
    }
}
/// __Filterable__, __Read-only__ This region's site type. A `core` region indicates a traditional cloud computing [region](https://www.linode.com/docs/products/platform/get-started/guides/choose-a-data-center/#product-availability) that offers all compute services. A `distributed` region indicates sites that are globally dispersed to be closer to end users and workloads. These regions offer limited services.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SiteTypeEnum {
    #[serde(rename = "core")]
    Core,
    #[serde(rename = "distributed")]
    Distributed,
}

impl Default for SiteTypeEnum {
    fn default() -> SiteTypeEnum {
        Self::Core
    }
}
/// __Read-only__ This region's current operational status.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StatusEnum {
    #[serde(rename = "ok")]
    Ok,
    #[serde(rename = "outage")]
    Outage,
}

impl Default for StatusEnum {
    fn default() -> StatusEnum {
        Self::Ok
    }
}

