/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PostNodeBalancerRequest {
    /// Throttle TCP connections per second for TCP, HTTP, and HTTPS configurations.  Set to `0` (zero) to disable throttling.
    #[serde(rename = "client_conn_throttle", skip_serializing_if = "Option::is_none")]
    pub client_conn_throttle: Option<i32>,
    /// The port configs to create for this NodeBalancer. Each config needs a unique port and at least one node.
    #[serde(rename = "configs", skip_serializing_if = "Option::is_none")]
    pub configs: Option<Vec<models::PostNodeBalancerRequestConfigsInner>>,
    /// The ID of the Firewall to assign to the NodeBalancer.  - A NodeBalancer can have only one Firewall assigned to it. - Firewalls control inbound network traffic to NodeBalancers.
    #[serde(rename = "firewall_id", skip_serializing_if = "Option::is_none")]
    pub firewall_id: Option<i32>,
    /// __Filterable__ This NodeBalancer's label. These must be unique on your Account.
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    /// The ID of the Region to create this NodeBalancer in.
    #[serde(rename = "region")]
    pub region: String,
    /// An array of Tags applied to this object. Tags are for organizational purposes only.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
}

impl PostNodeBalancerRequest {
    pub fn new(region: String) -> PostNodeBalancerRequest {
        PostNodeBalancerRequest {
            client_conn_throttle: None,
            configs: None,
            firewall_id: None,
            label: None,
            region,
            tags: None,
        }
    }
}

