/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PutLinodeConfigInterfaceRequest : Linode configuration profile interface update request object.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PutLinodeConfigInterfaceRequest {
    /// IPv4 CIDR VPC subnet ranges that are routed to this interface.  - A range can't include any addresses that are assigned to an active Linode or another VPC subnet.  - When updating, you need to include any existing ranges to maintain them. If a range is left out, it will be removed.  - Include this as an empty array (`[]`) to remove all existing `nat_1_1` values.  - Omit this array to leave all existing `ip_ranges` as is. <<LB>> > ðŸ“˜ > > This only applies to interfaces with a `purpose` of `vpc`.
    #[serde(rename = "ip_ranges", skip_serializing_if = "Option::is_none")]
    pub ip_ranges: Option<Vec<String>>,
    #[serde(rename = "ipv4", skip_serializing_if = "Option::is_none")]
    pub ipv4: Option<models::PutLinodeConfigInterfaceRequestIpv4>,
    /// Set to `true` to label this configuration profile interface as the default route to the Linode.  - Each Linode can have one interface set as its `primary`.  - If you don't specifically set a `primary`, the first non-`vlan` type interface is automatically treated as the primary.
    #[serde(rename = "primary", skip_serializing_if = "Option::is_none")]
    pub primary: Option<bool>,
}

impl PutLinodeConfigInterfaceRequest {
    /// Linode configuration profile interface update request object.
    pub fn new() -> PutLinodeConfigInterfaceRequest {
        PutLinodeConfigInterfaceRequest {
            ip_ranges: None,
            ipv4: None,
            primary: None,
        }
    }
}

