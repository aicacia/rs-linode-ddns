/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetBetaPrograms200ResponseAllOfDataInner : An object representing Beta Program information.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetBetaPrograms200ResponseAllOfDataInner {
    /// __Read-only__ Additional details regarding the Beta Program.
    #[serde(rename = "description", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub description: Option<Option<String>>,
    /// __Filterable__, __Read-only__ The date-time that the Beta Program ended.  `null` indicates that the Beta Program is ongoing.
    #[serde(rename = "ended", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub ended: Option<Option<String>>,
    /// __Filterable__, __Read-only__ Whether the Beta Program requires [Green Light](https://www.linode.com/green-light/) participation for enrollment.
    #[serde(rename = "greenlight_only", skip_serializing_if = "Option::is_none")]
    pub greenlight_only: Option<bool>,
    /// The unique identifier of the Beta Program.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// __Filterable__, __Read-only__ The name of the Beta Program.
    #[serde(rename = "label", skip_serializing_if = "Option::is_none")]
    pub label: Option<String>,
    /// __Read-only__ Additional source of information for the Beta Program.
    #[serde(rename = "more_info", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub more_info: Option<Option<String>>,
    /// __Filterable__, __Read-only__ The start date-time of the Beta Program.
    #[serde(rename = "started", skip_serializing_if = "Option::is_none")]
    pub started: Option<String>,
}

impl GetBetaPrograms200ResponseAllOfDataInner {
    /// An object representing Beta Program information.
    pub fn new() -> GetBetaPrograms200ResponseAllOfDataInner {
        GetBetaPrograms200ResponseAllOfDataInner {
            description: None,
            ended: None,
            greenlight_only: None,
            id: None,
            label: None,
            more_info: None,
            started: None,
        }
    }
}

