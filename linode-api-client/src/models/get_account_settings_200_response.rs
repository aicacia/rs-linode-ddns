/*
 * Akamai: Linode API
 *
 * Add a Cloud Computing instance so you can build, release, and scale applications faster with virtual machines. 
 *
 * The version of the OpenAPI document: 4.193.0
 * Contact: jperez@linode.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetAccountSettings200Response : Account Settings object.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetAccountSettings200Response {
    /// Account-wide backups default.  If `true`, all Linodes created will automatically be enrolled in the Backups service.  If `false`, Linodes will not be enrolled by default, but may still be enrolled on creation or later.
    #[serde(rename = "backups_enabled", skip_serializing_if = "Option::is_none")]
    pub backups_enabled: Option<bool>,
    /// __Read-only__ The Longview Pro tier you are currently subscribed to. The value must be a [Longview subscription](https://techdocs.akamai.com/linode-api/reference/get-longview-subscriptions) ID or `null` for Longview Free.
    #[serde(rename = "longview_subscription", skip_serializing_if = "Option::is_none")]
    pub longview_subscription: Option<String>,
    /// __Read-only__ Our 24/7 incident response service. This robust, multi-homed monitoring system distributes monitoring checks to ensure that your servers remain online and available at all times. Linode Managed can monitor any service or software stack reachable over TCP or HTTP. Once you add a service to Linode Managed, we'll monitor it for connectivity, response, and total request time.
    #[serde(rename = "managed", skip_serializing_if = "Option::is_none")]
    pub managed: Option<bool>,
    /// Enables network helper across all users by default for new Linodes and Linode Configs.
    #[serde(rename = "network_helper", skip_serializing_if = "Option::is_none")]
    pub network_helper: Option<bool>,
    /// __Read-only__ A string describing the status of this account's Object Storage service enrollment.
    #[serde(rename = "object_storage", skip_serializing_if = "Option::is_none")]
    pub object_storage: Option<ObjectStorageEnum>,
}

impl GetAccountSettings200Response {
    /// Account Settings object.
    pub fn new() -> GetAccountSettings200Response {
        GetAccountSettings200Response {
            backups_enabled: None,
            longview_subscription: None,
            managed: None,
            network_helper: None,
            object_storage: None,
        }
    }
}
/// __Read-only__ A string describing the status of this account's Object Storage service enrollment.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ObjectStorageEnum {
    #[serde(rename = "disabled")]
    Disabled,
    #[serde(rename = "suspended")]
    Suspended,
    #[serde(rename = "active")]
    Active,
}

impl Default for ObjectStorageEnum {
    fn default() -> ObjectStorageEnum {
        Self::Disabled
    }
}

